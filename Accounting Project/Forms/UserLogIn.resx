<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="lineShape2.Bounds" type="System.Drawing.Rectangle, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>226, 156, 321, 0</value>
  </metadata>
  <metadata name="lineShape2.Location" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>226, 156</value>
  </metadata>
  <metadata name="lineShape2.Size" type="System.Drawing.Size, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>321, 0</value>
  </metadata>
  <metadata name="lineShape1.Bounds" type="System.Drawing.Rectangle, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>226, 120, 321, 0</value>
  </metadata>
  <metadata name="lineShape1.Location" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>226, 120</value>
  </metadata>
  <metadata name="lineShape1.Size" type="System.Drawing.Size, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>321, 0</value>
  </metadata>
</root>